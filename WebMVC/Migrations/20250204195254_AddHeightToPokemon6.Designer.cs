// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebMVC.Data;

#nullable disable

namespace WebMVC.Migrations
{
    [DbContext(typeof(PokemonContext))]
    [Migration("20250204195254_AddHeightToPokemon6")]
    partial class AddHeightToPokemon6
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebMVC.Models.Pokemon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AbilityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SecondTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AbilityId");

                    b.HasIndex("SecondTypeId");

                    b.HasIndex("TypeId");

                    b.ToTable("Pokemon", (string)null);
                });

            modelBuilder.Entity("WebMVC.Models.PokemonAbility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PokemonAbility", (string)null);
                });

            modelBuilder.Entity("WebMVC.Models.PokemonSecondType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PokemonSecondType");
                });

            modelBuilder.Entity("WebMVC.Models.PokemonType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PokemonType", (string)null);
                });

            modelBuilder.Entity("WebMVC.Models.Pokemon", b =>
                {
                    b.HasOne("WebMVC.Models.PokemonAbility", "Ability")
                        .WithMany()
                        .HasForeignKey("AbilityId");

                    b.HasOne("WebMVC.Models.PokemonSecondType", "SecondType")
                        .WithMany()
                        .HasForeignKey("SecondTypeId");

                    b.HasOne("WebMVC.Models.PokemonType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId");

                    b.Navigation("Ability");

                    b.Navigation("SecondType");

                    b.Navigation("Type");
                });
#pragma warning restore 612, 618
        }
    }
}
