@using Microsoft.AspNetCore.Mvc.Localization
@model ApiModelsResponse.ViewModels.TreinadorViewModel
@inject IViewLocalizer localizer

<link rel="stylesheet" href="~/css/Trainers/index.css" />
@{
    Layout = "_Layout";
}

<div class="trainer-details-container">
    <div class="trainer-profile">
        <h1 class="trainer-name">@Model.Name</h1>
        <div class="trainer-image-container">
            <img src="@Model.ImagePath" alt="Trainer Image" class="trainer-image" />
        </div>
        <p class="trainer-location"><span>@localizer["location"]:</span> @Model.Location</p>
    </div>

    <div class="pokemon-team">
        @for (int i = 1; i <= 6; i++)
        {
            var pokemonName = (string)Model.GetType()
            .GetProperty($"Pokemon{i}Name").GetValue(Model);
            var pokemonAbility = (string)Model.GetType()
            .GetProperty($"Pokemon{i}Ability").GetValue(Model);
            var pokemonType1 = (string)Model.GetType()
            .GetProperty($"Pokemon{i}PokemonTypeName1").GetValue(Model);
            var pokemonType2 = (string)Model.GetType()
            .GetProperty($"Pokemon{i}PokemonTypeName2").GetValue(Model);
            var pokemonLevel = (int)Model.GetType()
            .GetProperty($"Pokemon{i}Level").GetValue(Model);
            var pokemonId = (int)Model.GetType()
            .GetProperty($"Pokemon{i}Id").GetValue(Model);
            var pokemonImage = $"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/{pokemonId}.png";

            if (string.IsNullOrEmpty(pokemonName)) continue;

            <div class="pokemon-card">
                <div class="pokemon-header">
                    <h3 class="pokemon-name">@pokemonName.ToUpper()</h3>
                    <span class="pokemon-level">Lv.@pokemonLevel</span>
                </div>

                <a href="@Url.Action("Details", "PokemonApi", new { pokemonName = pokemonName })" class="pokemon-image-link">
                    <img src="@pokemonImage" alt="@pokemonName" class="pokemon-image" />
                </a>

                <div class="pokemon-details">
                    <div class="pokemon-ability">
                        <span class="detail-label">@localizer["ability"]:</span>
                        <a href="@Url.Action("AbilityDetails", "PokemonApi", new { abilityName = pokemonAbility})" class="ability-link">
                            @pokemonAbility
                        </a>
                    </div>

                    <div class="pokemon-types">
                        <span class="detail-label">@localizer["types"]:</span>
                        <span class="type @pokemonType1.ToLower()">@pokemonType1</span>
                        @if (pokemonType2 != null && !string.IsNullOrEmpty(pokemonType2))
                        {
                            <span class="type @pokemonType2.ToLower()">@pokemonType2</span>
                        }
                    </div>

                    <div class="pokemon-moves">
                        <span class="detail-label">@localizer["moves"]:</span>
                        <ul class="moves-list">
                            @for (int j = 1; j <= 4; j++)
                            {
                                var move = (string)Model.GetType()
                                .GetProperty($"Pokemon{i}Move{j}").GetValue(Model);
                                if (!string.IsNullOrEmpty(move))
                                {
                                    <li class="move-item">
                                        <a href="@Url.Action("MoveDetails", "PokemonApi", new { moveName = move })" class="move-link">
                                            @move
                                        </a>
                                    </li>
                                }
                            }
                        </ul>
                    </div>
                </div>
            </div>
        }
    </div>

    <div class="details-actions">
        <a href="@Url.Action("Index")" class="back-button">Back to Trainers</a>
    </div>
</div>