@using ApiModelsResponse.ViewModels
@model TreinadorViewModel

@{
    ViewData["Title"] = "Adicionar Treinador";
}

<h2>Edit Trainer</h2>

<form asp-action="Edit" method="post" enctype="multipart/form-data">
    <div class="mb-3">
        <label asp-for="Name" class="form-label">Name</label>
        <input asp-for="Name" class="form-control" value="@Model.Name" required>
    </div>

    <div class="mb-3">
        <label asp-for="ImagePath" class="form-label">Image</label>
        <input type="file" class="form-control" id="imageUpload" value="@Model.ImagePath" accept="image/*">
        <input type="hidden" asp-for="ImagePath" value="@Model.ImagePath"  id="imagePath">
    </div>

    <div class="mb-3">
        <label asp-for="Location" class="form-label">Local</label>
        <input asp-for="Location" class="form-control" value="@Model.Location" required>
    </div>

    <h4>Pokémons</h4>
    <div id="pokemonContainer">
        @for (int i = 1; i <= 6; i++)
        {
            <div class="pokemon-slot border p-3 mb-2">
                <h5>Pokémon @(i)</h5>
                <div class="mb-2">
                    <label class="form-label">Filtrar Pokémon</label>
                    <input type="text" class="form-control pokemon-filter" data-index="@i" placeholder="Digite para buscar...">
                </div>
                <div class="mb-2">
                    <label class="form-label">Selecionar Pokémon</label>
                    <select name="Pokemon@(i)Name" class="form-control pokemon-select" data-index="@i">
                        <option value="">Selecione um Pokémon</option>
                        @foreach (var pokemon in Model.Pokemons)
                        {
                            var pokemonName = Model.GetType().GetProperty($"Pokemon{i}Name")?.GetValue(Model)?.ToString();
                            if (pokemonName == pokemon.Name)
                            {
                                <option 
                                        selected
                                        value="@pokemon.Name"
                                        type1="@pokemon.PokemonType1?.Name"
                                        type2="@pokemon.PokemonType2?.Name"
                                        ability1="@pokemon.Ability1?.Name"
                                        ability2="@pokemon.Ability2?.Name"
                                        ability3="@pokemon.Ability3?.Name">@pokemon.Name</option>
                            }else{

                                <option value="@pokemon.Name"
                                        type1="@pokemon.PokemonType1?.Name"
                                        type2="@pokemon.PokemonType2?.Name"
                                        ability1="@pokemon.Ability1?.Name"
                                        ability2="@pokemon.Ability2?.Name"
                                        ability3="@pokemon.Ability3?.Name">@pokemon.Name</option>
                            }
                        }
                    </select>
                </div>
                <div class="mb-2">
                    <label class="form-label">Tipo Primário</label>
                    <input type="text" name="Pokemon@(i)PokemonTypeName1" value="@Model.GetType().GetProperty($"Pokemon{i}PokemonTypeName1")?.GetValue(Model)" class="form-control" readonly>
                </div>
                <div class="mb-2">
                    <label class="form-label">Tipo Secundário</label>
                    <input type="text" name="Pokemon@(i)PokemonTypeName2" value="@Model.GetType().GetProperty($"Pokemon{i}PokemonTypeName2")?.GetValue(Model)"  class="form-control" readonly>
                </div>
                <div class="mb-2">
                    <label class="form-label">Habilidade</label>
                    <select name="Pokemon@(i)Ability" value="@Model.GetType().GetProperty($"Pokemon{i}Ability")?.GetValue(Model)" class="form-control ability-select">
                        <option value="">Selecione uma habilidade</option>
                    </select>
                </div>
                <div class="mb-2">
                    <label class="form-label">Level</label>
                    <input type="number" name="Pokemon@(i)Level" value="@Model.GetType().GetProperty($"Pokemon{i}Level")?.GetValue(Model)" class="form-control" min="0" max="100">
                </div>
                <div class="mb-2">
                    <label class="form-label">Movimentos</label>
                    <select disabled name="Pokemon@(i)Move1" value="@Model.GetType().GetProperty($"Pokemon{i}Move1")?.GetValue(Model)" class="form-control" placeholder="Movimento 1">
                        <option value="">Selecione um Movimento</option>
                    </select>
                    <select disabled name="Pokemon@(i)Move2" value="@Model.GetType().GetProperty($"Pokemon{i}Move2")?.GetValue(Model)" class="form-control" placeholder="Movimento 2">
                        <option value="">Selecione um Movimento</option>
                    </select>
                    <select disabled name="Pokemon@(i)Move3" value="@Model.GetType().GetProperty($"Pokemon{i}Move3")?.GetValue(Model)"  class="form-control" placeholder="Movimento 3">
                        <option value="">Selecione um Movimento</option>
                    </select>
                    <select disabled name="Pokemon@(i)Move4" value="@Model.GetType().GetProperty($"Pokemon{i}Move4")?.GetValue(Model)"  class="form-control" placeholder="Movimento 4">
                        <option value="">Selecione um Movimento</option>
                    </select>
                </div>
            </div>
        }
    </div>

    <button type="submit" class="btn btn-primary">Salvar</button>
    <a asp-action="Index" class="btn btn-secondary">Cancelar</a>
</form>

<script>
    document.getElementById('imageUpload').addEventListener('change', function(event) {
        const file = event.target.files[0];
        if (file) {
            console.log(file);
            const reader = new FileReader();
            reader.onload = function(e) {
                var result = e.target.result;
                document.getElementById('imagePath').value = result;
            };
            reader.readAsDataURL(file);
        }
    });

    document.querySelectorAll('.pokemon-filter').forEach(input => {
        input.addEventListener('input', function() {
            const index = this.getAttribute('data-index');
            const filterValue = this.value.toLowerCase();
            const select = document.querySelector(`.pokemon-select[data-index='${index}']`);

            Array.from(select.options).forEach(option => {
                if (option.value.toLowerCase().includes(filterValue) || option.value === "") {
                    option.hidden = false;
                } else {
                    option.hidden = true;
                }
            });
        });
    });
        async function getPokemonMoves(pokemonName) {
        try {
            const response = await fetch(`https://localhost:7199/api/pokemonrestapi/moves/${pokemonName}`, {
                method: 'GET',
                mode: 'cors',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json',
                },
            });

            if (!response.ok) {
                throw new Error(`HTTP error! Status: ${response.status}`);
            }

            const text = await response.text(); // Lê o conteúdo como texto
            const data = JSON.parse(text);

            return data;
        } catch (error) {
            console.error("Error fetching Pokémon moves:", error);
            throw error;
        }
    }

        function retornaMove1NameFromIndex(index){

            switch(index){
                case 1:
                    return "@Html.Raw(Model.GetType().GetProperty($"Pokemon1Move1").GetValue(Model))";
                    break;
                case 2:
                    return "@Html.Raw(@Model.GetType().GetProperty($"Pokemon2Move1").GetValue(Model))";
                    break;
                case 3:
                    return "@Html.Raw(@Model.GetType().GetProperty($"Pokemon3Move1").GetValue(Model))";
                    break;
                case 4:
                    return "@Html.Raw(@Model.GetType().GetProperty($"Pokemon4Move1").GetValue(Model))";
                    break;
                case 5:
                    return "@Html.Raw(@Model.GetType().GetProperty($"Pokemon5Move1").GetValue(Model))";
                    break;
                case 6:
                    return "@Html.Raw(@Model.GetType().GetProperty($"Pokemon6Move1").GetValue(Model))";
                    break;
            }    
        }

        function retornaMove2NameFromIndex(index){

            switch(index){
                case 1:
                    return "@Model.GetType().GetProperty($"Pokemon1Move2").GetValue(Model)";
                    break;
                case 2:
                    return "@Model.GetType().GetProperty($"Pokemon2Move2").GetValue(Model)";
                    break;
                case 3:
                    return "@Model.GetType().GetProperty($"Pokemon3Move2").GetValue(Model)";
                    break;
                case 4:
                    return "@Model.GetType().GetProperty($"Pokemon4Move2").GetValue(Model)";
                    break;
                case 5:
                    return "@Model.GetType().GetProperty($"Pokemon5Move2").GetValue(Model)";
                    break;
                case 6:
                    return "@Model.GetType().GetProperty($"Pokemon6Move2").GetValue(Model)";
                    break;
            }
        }

        function retornaMove3NameFromIndex(index){

            switch(index){
                case 1:
                    return "@Model.GetType().GetProperty($"Pokemon1Move3").GetValue(Model)";
                    break;
                case 2:
                    return "@Model.GetType().GetProperty($"Pokemon2Move3").GetValue(Model)";
                    break;
                case 3:
                    return "@Model.GetType().GetProperty($"Pokemon3Move3").GetValue(Model)";
                    break;
                case 4:
                    return "@Model.GetType().GetProperty($"Pokemon4Move3").GetValue(Model)";
                    break;
                case 5:
                    return @Model.GetType().GetProperty($"Pokemon5Move3").GetValue(Model);
                    break;
                case 6:
                    return @Model.GetType().GetProperty($"Pokemon6Move3").GetValue(Model);
                    break;
            }
        }

        function retornaMove4NameFromIndex(index){

            switch(index){
                case 1:
                    return "@Model.GetType().GetProperty($"Pokemon1Move4").GetValue(Model)";
                    break;
                case 2:
                    return "@Model.GetType().GetProperty($"Pokemon2Move4").GetValue(Model)";
                    break;
                case 3:
                    return "@Model.GetType().GetProperty($"Pokemon3Move4").GetValue(Model)";
                    break;
                case 4:
                    return "@Model.GetType().GetProperty($"Pokemon4Move4").GetValue(Model)";
                    break;
                case 5:
                    return "@Model.GetType().GetProperty($"Pokemon5Move4").GetValue(Model)";
                    break;
                case 6:
                    return "@Model.GetType().GetProperty($"Pokemon6Move4").GetValue(Model)";
                    break;
            }
        }


        document.querySelectorAll('.pokemon-select').forEach(async (select) => {
        select.addEventListener('change', async function(event) {
            const index = this.getAttribute('data-index');
            const selectedOption = this.selectedOptions[0]; // Get the selected option

            var pokemonName = event.target.value;

            console.log(pokemonName);
            try {
                var moves = await getPokemonMoves(pokemonName);
                    var selectPokemonMoves = [
                      document.getElementsByName("Pokemon" + index + "Move1")[0],
                      document.getElementsByName("Pokemon" + index + "Move2")[0],
                      document.getElementsByName("Pokemon" + index + "Move3")[0],
                      document.getElementsByName("Pokemon" + index + "Move4")[0]
                    ];
                    // Adiciona os movimentos como opções para cada select
                    selectPokemonMoves.forEach(select => {
                        select.innerHTML = "";
                        select.disabled = false;

                        var option = document.createElement("option");
                        option.value = "";  // valor do movimento
                        option.textContent = "Selecione um movimento";  // texto exibido
                        select.appendChild(option);  // adiciona a opção
                      moves.forEach(move => {
                        var option = document.createElement("option");

                        option.value = move.name;  // valor do movimento
                        option.textContent = move.name;  // texto exibido
                        select.appendChild(option);  // adiciona a opção no select
                      });

                      var selectedValue = select.getAttribute("value");
                       if (selectedValue) {
                            for (let opt of select.options) {
                                if (opt.value === selectedValue) {
                                    opt.selected = true;
                                    break;
                                }
                            }
                        }
                    });

            } catch (error) {
                console.error("Error fetching Pokémon moves:", error);
            }

            // Get attributes from the selected option
            const type1 = selectedOption.getAttribute('type1') || "";
            const type2 = selectedOption.getAttribute('type2') || "";
            const ability1 = selectedOption.getAttribute('ability1') || "";
            const ability2 = selectedOption.getAttribute('ability2') || "";
            const ability3 = selectedOption.getAttribute('ability3') || "";

            // Fill in types if elements exist
            const typeInput = document.querySelector(`[name='Pokemon${index}PokemonTypeName1']`);
            if (typeInput) {
                typeInput.value = type1;
            }

            const secondTypeInput = document.querySelector(`[name='Pokemon${index}PokemonTypeName2']`);
            if (secondTypeInput) {
                secondTypeInput.value = type2;
            }

                /// Update abilities dropdown if element exists
            const abilitySelect = document.querySelector(`[name='Pokemon${index}Ability']`);
            if (abilitySelect) {
                // Limpar as opções existentes
                abilitySelect.innerHTML = "<option value=''>Selecione uma habilidade</option>";

                var abilidadeSelecionada1 = "@Html.Raw(Model.Pokemon1Ability)";
                var abilidadeSelecionada2 = "@Html.Raw(Model.Pokemon2Ability)";
                var abilidadeSelecionada3 = "@Html.Raw(Model.Pokemon3Ability)";
                var abilidadeSelecionada4 = "@Html.Raw(Model.Pokemon4Ability)";
                var abilidadeSelecionada5 = "@Html.Raw(Model.Pokemon5Ability)";
                var abilidadeSelecionada6 = "@Html.Raw(Model.Pokemon6Ability)";
                var listaAbilidades = [abilidadeSelecionada1,abilidadeSelecionada2,abilidadeSelecionada3,abilidadeSelecionada4,abilidadeSelecionada5,abilidadeSelecionada6];
                // Adicionando as habilidades se existirem
                if (ability1) {
                    const option1 = document.createElement("option");
                    option1.value = ability1;
                    if(listaAbilidades.includes(ability1))
                        option1.selected = true;
                    option1.textContent = ability1;
                    abilitySelect.appendChild(option1);
                }
                if (ability2) {
                    const option2 = document.createElement("option");
                    option2.value = ability2;
                    if(listaAbilidades.includes(ability2))
                        option2.selected = true;
                    option2.textContent = ability2;
                    abilitySelect.appendChild(option2);
                }
                if (ability3) {
                    const option3 = document.createElement("option");
                    option3.value = ability3;
                    if(listaAbilidades.includes(ability3))
                        option3.selected = true;
                    option3.textContent = ability3;
                    abilitySelect.appendChild(option3);
                }
            }

        });
    });
        document.addEventListener("DOMContentLoaded", function() {
        document.querySelectorAll('.pokemon-select').forEach( (select, contador) => {

            if(contador == 0 && "@Html.Raw(Model.Pokemon1Name)" != ""){
                select.value = "@Html.Raw(@Model.Pokemon1Name)";

                var selectMove1 = document.querySelectorAll("select[name=Pokemon1Move1]")[0];
                selectMove1.disabled = false;
                var move1Name = retornaMove1NameFromIndex(contador+1);
                selectMove1.value = move1Name;

                var selectMove2 = document.querySelectorAll("select[name=Pokemon1Move2]")[0];
                selectMove2.disabled = false;
                selectMove2.value = retornaMove2NameFromIndex(contador+1);

                var selectMove3 = document.querySelectorAll("select[name=Pokemon1Move3]")[0];
                selectMove3.disabled = false;
                selectMove3.value = retornaMove3NameFromIndex(contador+1);

                var selectMove4 = document.querySelectorAll("select[name=Pokemon1Move4]")[0];
                selectMove4.disabled = false;
                selectMove4.value = retornaMove4NameFromIndex(contador+1);

            }
            if(contador == 1  && "@Html.Raw(Model.Pokemon2Name)" != ""){
                select.value = "@Html.Raw(@Model.Pokemon2Name)";

                var selectMove1 = document.querySelectorAll("select[name=Pokemon2Move1]")[0];
                selectMove1.disabled = false;
                selectMove1.value = retornaMove1NameFromIndex(contador+1);

                var selectMove2 = document.querySelectorAll("select[name=Pokemon2Move2]")[0];
                selectMove2.disabled = false;
                selectMove2.value = retornaMove1NameFromIndex(contador+1);

                var selectMove3 = document.querySelectorAll("select[name=Pokemon2Move3]")[0];
                selectMove3.disabled = false;
                selectMove3.value = retornaMove1NameFromIndex(contador+1);

                var selectMove4 = document.querySelectorAll("select[name=Pokemon2Move4]")[0];
                selectMove4.disabled = false;
                selectMove4.value = retornaMove1NameFromIndex(contador+1);
            }
            if(contador == 2  && "@Html.Raw(Model.Pokemon3Name)" != ""){
                select.value = "@Html.Raw(@Model.Pokemon3Name)";

                var selectMove1 = document.querySelectorAll("select[name=Pokemon3Move1]")[0];
                selectMove1.disabled = false;
                selectMove1.value = retornaMove1NameFromIndex(contador+1);

                var selectMove2 = document.querySelectorAll("select[name=Pokemon3Move2]")[0];
                selectMove2.disabled = false;
                selectMove2.value = retornaMove1NameFromIndex(contador+1);

                var selectMove3 = document.querySelectorAll("select[name=Pokemon3Move3]")[0];
                selectMove3.disabled = false;
                selectMove3.value = retornaMove1NameFromIndex(contador+1);

                var selectMove4 = document.querySelectorAll("select[name=Pokemon3Move4]")[0];
                selectMove4.disabled = false;
                selectMove4.value = retornaMove1NameFromIndex(contador+1);
            }
            if(contador == 3  && "@Html.Raw(Model.Pokemon4Name)" != ""){
                select.value = "@Html.Raw(@Model.Pokemon4Name)";

                var selectMove1 = document.querySelectorAll("select[name=Pokemon4Move1]")[0];
                selectMove1.disabled = false;
                selectMove1.value = retornaMove1NameFromIndex(contador+1);

                var selectMove2 = document.querySelectorAll("select[name=Pokemon4Move2]")[0];
                selectMove2.disabled = false;
                selectMove2.value = retornaMove1NameFromIndex(contador+1);

                var selectMove3 = document.querySelectorAll("select[name=Pokemon4Move3]")[0];
                selectMove3.disabled = false;
                selectMove3.value = retornaMove1NameFromIndex(contador+1);

                var selectMove4 = document.querySelectorAll("select[name=Pokemon4Move4]")[0];
                selectMove4.disabled = false;
                selectMove4.value = retornaMove1NameFromIndex(contador+1);
            }
            if(contador == 4  && "@Html.Raw(Model.Pokemon5Name)" != ""){
                select.value = "@Html.Raw(@Model.Pokemon5Name)";

                var selectMove1 = document.querySelectorAll("select[name=Pokemon5Move1]")[0];
                selectMove1.disabled = false;
                selectMove1.value = retornaMove1NameFromIndex(contador+1);

                var selectMove2 = document.querySelectorAll("select[name=Pokemon5Move2]")[0];
                selectMove2.disabled = false;
                selectMove2.value = retornaMove1NameFromIndex(contador+1);

                var selectMove3 = document.querySelectorAll("select[name=Pokemon5Move3]")[0];
                selectMove3.disabled = false;
                selectMove3.value = retornaMove1NameFromIndex(contador+1);

                var selectMove4 = document.querySelectorAll("select[name=Pokemon5Move4]")[0];
                selectMove4.disabled = false;
                selectMove4.value = retornaMove1NameFromIndex(contador+1);
            }
            if(contador == 5  && "@Html.Raw(Model.Pokemon6Name)" != ""){
                select.value = "@Html.Raw(@Model.Pokemon6Name)";

                var selectMove1 = document.querySelectorAll("select[name=Pokemon6Move1]")[0];
                selectMove1.disabled = false;
                selectMove1.value = retornaMove1NameFromIndex(contador+1);

                var selectMove2 = document.querySelectorAll("select[name=Pokemon6Move2]")[0];
                selectMove2.disabled = false;
                selectMove2.value = retornaMove1NameFromIndex(contador+1);

                var selectMove3 = document.querySelectorAll("select[name=Pokemon6Move3]")[0];
                selectMove3.disabled = false;
                selectMove3.value = retornaMove1NameFromIndex(contador+1);

                var selectMove4 = document.querySelectorAll("select[name=Pokemon6Move4]")[0];
                selectMove4.disabled = false;
                selectMove4.value = retornaMove1NameFromIndex(contador+1);
            }
            if (select.value) { // Se já houver um Pokémon selecionado, dispara o evento change
                select.dispatchEvent(new Event('change'));
            }
        });
    });

</script>