@using ApiModelsResponse.ViewModels
@using Microsoft.AspNetCore.Mvc.Localization
@model PokemonDetailsViewModel
@inject IViewLocalizer localizer;
@{
    Dictionary<string, string> _pokemonTypeColors = new Dictionary<string, string>
    {
        { "fire", "#f42" },
        { "ground", "#db5" },
        { "water", "#39f" },
        { "grass", "#7c5" },
        { "electric", "#fc3" },
        { "bug", "#ab2" },
        { "flying", "#89f" },
        { "fairy", "#e9e" },
        { "ghost", "#66b" },
        { "poison", "#a59" },
        { "normal", "#aa9" },
        { "fighting", "#b54" },
        { "rock", "#ba6" },
        { "steel", "#aab" },
        { "psychic", "#f59" },
        { "ice", "#6cf" },
        { "dark", "#754" },
        { "dragon", "#76e" },
    };
}

<div class="pokemon-details-container">
    <div id="DetailImg" class="pokemon-image-container">
        <img src="@Model.ImageUrl" class="pokemon-image" alt="@Model.Name">
        <div class="image-shadow"></div>
    </div>
    <div class="pokemon-info-container">
        <h5 class="pokemon-id"><strong>ID:</strong> @Model.Id</h5>

        <h5 class="section-title">@localizer["types"]:</h5>
        <ul class="types-list">
            <li class="pokemon-type" style='background-color: @_pokemonTypeColors[Model.PokemonType1.Name]'>@Model.PokemonType1.Name.ToUpper()</li>
            @if (Model.PokemonType2 != null)
            {
                <li class="pokemon-type" style='background-color: @_pokemonTypeColors[Model.PokemonType2.Name]'>@Model.PokemonType2.Name.ToUpper()</li>
            }
        </ul>

        <h5 class="section-title">@localizer["abilities"]:</h5>
        <ul class="abilities-list">
            <li>
                <a href="@Url.Action("AbilityDetails", "PokemonApi", new { abilityName = Model.Ability1.Name})">
                    @Model.Ability1.Name
                </a>
            </li>
            @if (Model.Ability2 != null)
            {
                <li>
                    <a href="@Url.Action("AbilityDetails", "PokemonApi", new { abilityName = Model.Ability2.Name})">
                        @Model.Ability2.Name
                    </a>
                </li>
            }
            @if (Model.Ability3 != null)
            {
                <li>
                    <a href="@Url.Action("AbilityDetails", "PokemonApi", new { abilityName = Model.Ability3.Name})">
                        @Model.Ability3.Name
                    </a>
                </li>
            }
        </ul>

        <h5 class="section-title">@localizer["statistics"]:</h5>
        <div class="stat-container">
            <span class="stat-label"><strong>HP</strong> @Model.HP</span>
            <div class="progress">
                <div class="progress-bar" role="progressbar"
                     style="width: @(Model.HP / 2)%;"
                     aria-valuenow="@Model.HP"
                     aria-valuemin="0"
                     aria-valuemax="200">
                </div>
            </div>
        </div>

        <div class="stat-container">
            <span class="stat-label"><strong>ATTACK</strong> @Model.ATTACK</span>
            <div class="progress">
                <div class="progress-bar" role="progressbar"
                     style="width: @(Model.ATTACK / 2)%;"
                     aria-valuenow="@Model.ATTACK"
                     aria-valuemin="0"
                     aria-valuemax="200">
                </div>
            </div>
        </div>

        <div class="stat-container">
            <span class="stat-label"><strong>DEFENSE</strong> @Model.DEFENSE</span>
            <div class="progress">
                <div class="progress-bar" role="progressbar"
                     style="width: @(Model.DEFENSE / 2)%;"
                     aria-valuenow="@Model.DEFENSE"
                     aria-valuemin="0"
                     aria-valuemax="200">
                </div>
            </div>
        </div>

        <div class="stat-container">
            <span class="stat-label"><strong>SPECIAL ATTACK</strong> @Model.SP_ATTACK</span>
            <div class="progress">
                <div class="progress-bar" role="progressbar"
                     style="width: @(Model.SP_ATTACK / 2)%;"
                     aria-valuenow="@Model.SP_ATTACK"
                     aria-valuemin="0"
                     aria-valuemax="200">
                </div>
            </div>
        </div>

        <div class="stat-container">
            <span class="stat-label"><strong>SPECIAL DEFENSE</strong> @Model.SP_DEFENSE</span>
            <div class="progress">
                <div class="progress-bar" role="progressbar"
                     style="width: @(Model.SP_DEFENSE / 2)%;"
                     aria-valuenow="@Model.SP_DEFENSE"
                     aria-valuemin="0"
                     aria-valuemax="200">
                </div>
            </div>
        </div>

        <div class="stat-container">
            <span class="stat-label"><strong>SPEED</strong> @Model.SPEED</span>
            <div class="progress">
                <div class="progress-bar" role="progressbar"
                     style="width: @(Model.SPEED / 2)%;"
                     aria-valuenow="@Model.SPEED"
                     aria-valuemin="0"
                     aria-valuemax="200">
                </div>
            </div>
        </div>
        <script>
            var list = document.getElementsByClassName("progress-bar");

            function returnColorStat(width){
                return  (width< 20 ? "redBar" : width < 50 ? "orangeBar" : width < 75 ? "yellowBar" : width < 100 ? "greenBar" : width < 120 ? "blueBar" : "tealBar");
            }

            for(var i=0; i < list.length; i++){
                var progressBar = list[i];
                var width = progressBar.getAttribute("aria-valuenow");
                progressBar.classList.add(returnColorStat(width));
            }
        </script>
    </div>
</div>